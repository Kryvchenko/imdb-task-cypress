{
  "stats": {
    "suites": 3,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-10T11:41:47.320Z",
    "end": "2023-01-10T11:46:34.414Z",
    "duration": 285141,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e1b1334c-1656-4ce3-bed5-a70aedbe90b7",
      "title": "",
      "fullFile": "cypress/e2e/actor/actor.cy.js",
      "file": "cypress/e2e/actor/actor.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "383060fe-c0d4-48b2-865f-d90d8acd17e5",
          "title": "Visit actor`s page and sort his filmographie",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should allow to open actor Denzel Washington(I) page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Denzel Washington(I) page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 13747,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "f6e640d4-67d4-4c6f-a7f6-8683392f0f2e",
              "parentUUID": "383060fe-c0d4-48b2-865f-d90d8acd17e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Bruce Willis(I) page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Bruce Willis(I) page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 10829,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "81707ebe-ec79-4ed9-b93a-5d6c9afdff95",
              "parentUUID": "383060fe-c0d4-48b2-865f-d90d8acd17e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Antonio Banderas page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Antonio Banderas page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 12945,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "3db805a5-fbaa-4a8a-a609-af25892a9f6b",
              "parentUUID": "383060fe-c0d4-48b2-865f-d90d8acd17e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Jason Statham page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Jason Statham page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 12733,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "a1f85ec2-f623-4ada-8e99-31d207331e2c",
              "parentUUID": "383060fe-c0d4-48b2-865f-d90d8acd17e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Robert De Niro page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Robert De Niro page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 11714,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "9cb76e8a-335b-40a7-b10c-4205da2c9b3d",
              "parentUUID": "383060fe-c0d4-48b2-865f-d90d8acd17e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Bo Derek page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Bo Derek page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 12772,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "d0cbb86a-7d88-4ada-8973-afdfde3b8c7e",
              "parentUUID": "383060fe-c0d4-48b2-865f-d90d8acd17e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Tom Cruise page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Tom Cruise page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 12572,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "bf42baf4-e00e-4aa4-bb06-761935b428ab",
              "parentUUID": "383060fe-c0d4-48b2-865f-d90d8acd17e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Nicolas Cage page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Nicolas Cage page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 10774,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "6d8df839-46b8-4b82-80e8-f4d82a32cd7b",
              "parentUUID": "383060fe-c0d4-48b2-865f-d90d8acd17e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f6e640d4-67d4-4c6f-a7f6-8683392f0f2e",
            "81707ebe-ec79-4ed9-b93a-5d6c9afdff95",
            "3db805a5-fbaa-4a8a-a609-af25892a9f6b",
            "a1f85ec2-f623-4ada-8e99-31d207331e2c",
            "9cb76e8a-335b-40a7-b10c-4205da2c9b3d",
            "d0cbb86a-7d88-4ada-8973-afdfde3b8c7e",
            "bf42baf4-e00e-4aa4-bb06-761935b428ab",
            "6d8df839-46b8-4b82-80e8-f4d82a32cd7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 98086,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "368f0f4c-86b0-438b-bbb2-d6cb1d1a1905",
      "title": "",
      "fullFile": "cypress/e2e/top-box/top-box.cy.js",
      "file": "cypress/e2e/top-box/top-box.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "55731ab7-b0c3-48a1-a746-511eaa3bd622",
          "title": "Visit the Top Box Page and try to rate movie",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should try open Black Panther: Wakanda Forever page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Black Panther: Wakanda Forever page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 8552,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "491f29bc-1bc7-46cb-8f6f-2556a633d229",
              "parentUUID": "55731ab7-b0c3-48a1-a746-511eaa3bd622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Puss in Boots: The Last Wish page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Puss in Boots: The Last Wish page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 7363,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "fe1bcb21-4acf-4a9b-91fe-20635d8ac8c7",
              "parentUUID": "55731ab7-b0c3-48a1-a746-511eaa3bd622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open The Menu page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open The Menu page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 8248,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "01788150-2f21-4e50-b5f0-39ddd158308d",
              "parentUUID": "55731ab7-b0c3-48a1-a746-511eaa3bd622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Whitney Houston: I Wanna Dance with Somebody page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Whitney Houston: I Wanna Dance with Somebody page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 7233,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "759fd4c9-d6f3-46c2-8fff-d907b2a69817",
              "parentUUID": "55731ab7-b0c3-48a1-a746-511eaa3bd622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Avatar: The Way of Water page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Avatar: The Way of Water page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 8096,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "9d6ddbd0-9c1e-4571-bf2a-8ecb83853078",
              "parentUUID": "55731ab7-b0c3-48a1-a746-511eaa3bd622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Babylon page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Babylon page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 7955,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "02a7d662-9e35-4abd-b9e9-84792cc14f5b",
              "parentUUID": "55731ab7-b0c3-48a1-a746-511eaa3bd622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Violent Night page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Violent Night page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 7716,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "0c59abb3-f8c3-4415-b545-fe6e047ef1b7",
              "parentUUID": "55731ab7-b0c3-48a1-a746-511eaa3bd622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open The Whale page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open The Whale page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 8344,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "e4b8a548-e1e7-4d5c-b6f2-bde297d0deec",
              "parentUUID": "55731ab7-b0c3-48a1-a746-511eaa3bd622",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "491f29bc-1bc7-46cb-8f6f-2556a633d229",
            "fe1bcb21-4acf-4a9b-91fe-20635d8ac8c7",
            "01788150-2f21-4e50-b5f0-39ddd158308d",
            "759fd4c9-d6f3-46c2-8fff-d907b2a69817",
            "9d6ddbd0-9c1e-4571-bf2a-8ecb83853078",
            "02a7d662-9e35-4abd-b9e9-84792cc14f5b",
            "0c59abb3-f8c3-4415-b545-fe6e047ef1b7",
            "e4b8a548-e1e7-4d5c-b6f2-bde297d0deec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 63507,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2021b87d-88b2-4977-9963-c5c81c7bfc1e",
      "title": "",
      "fullFile": "cypress/e2e/tv-show/tv-show.cy.js",
      "file": "cypress/e2e/tv-show/tv-show.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "48aaeac6-fcb7-43f9-90e9-f27c8d54f187",
          "title": "Visit a Top 250 TV shows section",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should allow open the Breaking Bad tv-show page and view photo of Danny Trejo",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Breaking Bad tv-show page and view photo of Danny Trejo",
              "timedOut": null,
              "duration": 15759,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "4a675c74-8cfd-4521-bd8b-45aebbd4222a",
              "parentUUID": "48aaeac6-fcb7-43f9-90e9-f27c8d54f187",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Band of Brothers tv-show page and view photo of Ron Livingston",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Band of Brothers tv-show page and view photo of Ron Livingston",
              "timedOut": null,
              "duration": 16532,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "75af64b7-b603-426b-8398-e80eebc58b7a",
              "parentUUID": "48aaeac6-fcb7-43f9-90e9-f27c8d54f187",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Chernobyl tv-show page and view photo of Hilton McRae",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Chernobyl tv-show page and view photo of Hilton McRae",
              "timedOut": null,
              "duration": 15012,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "af2872eb-3cfb-4073-8a55-d8c495959e53",
              "parentUUID": "48aaeac6-fcb7-43f9-90e9-f27c8d54f187",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Planet Earth II tv-show page and view photo of David Attenborough",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Planet Earth II tv-show page and view photo of David Attenborough",
              "timedOut": null,
              "duration": 14822,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "73d2f5ea-79d3-4a45-a500-15030026d114",
              "parentUUID": "48aaeac6-fcb7-43f9-90e9-f27c8d54f187",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Sherlock tv-show page and view photo of Amanda Abbington",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Sherlock tv-show page and view photo of Amanda Abbington",
              "timedOut": null,
              "duration": 14117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "3d1a8f08-c59a-4611-acca-08e4f8305bb5",
              "parentUUID": "48aaeac6-fcb7-43f9-90e9-f27c8d54f187",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the The Sopranos tv-show page and view photo of Vincent Pastore",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the The Sopranos tv-show page and view photo of Vincent Pastore",
              "timedOut": null,
              "duration": 14004,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "1bcfc715-57da-4cb2-ba1a-68e5419360cf",
              "parentUUID": "48aaeac6-fcb7-43f9-90e9-f27c8d54f187",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Cosmos tv-show page and view photo of Ann Druyan",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Cosmos tv-show page and view photo of Ann Druyan",
              "timedOut": null,
              "duration": 13967,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "13f9cf8b-7741-4661-9d18-7f481e56a5f4",
              "parentUUID": "48aaeac6-fcb7-43f9-90e9-f27c8d54f187",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Game of Thrones tv-show page and view photo of Emilia Clarke",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Game of Thrones tv-show page and view photo of Emilia Clarke",
              "timedOut": null,
              "duration": 19335,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "ac1c776d-b83e-4443-a52b-595dd3fcd118",
              "parentUUID": "48aaeac6-fcb7-43f9-90e9-f27c8d54f187",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a675c74-8cfd-4521-bd8b-45aebbd4222a",
            "75af64b7-b603-426b-8398-e80eebc58b7a",
            "af2872eb-3cfb-4073-8a55-d8c495959e53",
            "73d2f5ea-79d3-4a45-a500-15030026d114",
            "3d1a8f08-c59a-4611-acca-08e4f8305bb5",
            "1bcfc715-57da-4cb2-ba1a-68e5419360cf",
            "13f9cf8b-7741-4661-9d18-7f481e56a5f4",
            "ac1c776d-b83e-4443-a52b-595dd3fcd118"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 123548,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}