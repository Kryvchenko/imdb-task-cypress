{
  "stats": {
    "suites": 3,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-10T15:06:23.676Z",
    "end": "2023-01-10T15:11:21.951Z",
    "duration": 296281,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "363cdaef-e5bc-496a-b04c-4bd7dc861289",
      "title": "",
      "fullFile": "cypress/e2e/actor/actor.cy.js",
      "file": "cypress/e2e/actor/actor.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2013a38b-dabc-45b0-a29d-5b12965d986b",
          "title": "Visit actor`s page and sort his filmographie",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should allow to open actor Denzel Washington(I) page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Denzel Washington(I) page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 14591,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "bd261cd5-2b32-45ea-8485-077ccca0ede5",
              "parentUUID": "2013a38b-dabc-45b0-a29d-5b12965d986b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Bruce Willis(I) page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Bruce Willis(I) page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 10837,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "ae60a849-fa04-4653-a3b8-64e8cbe6bcd8",
              "parentUUID": "2013a38b-dabc-45b0-a29d-5b12965d986b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Antonio Banderas page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Antonio Banderas page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 11194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "3a1dd2c7-cf7a-4bc5-9fa7-eff8c8ed0762",
              "parentUUID": "2013a38b-dabc-45b0-a29d-5b12965d986b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Jason Statham page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Jason Statham page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 12090,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "1b380dae-533f-49f4-9405-d036b5c8c26d",
              "parentUUID": "2013a38b-dabc-45b0-a29d-5b12965d986b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Robert De Niro page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Robert De Niro page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 13369,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "303b757e-079b-4bc6-a416-daacc9b40f99",
              "parentUUID": "2013a38b-dabc-45b0-a29d-5b12965d986b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Bo Derek page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Bo Derek page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 12905,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "3e20f391-abbe-4893-8ac6-e76a2cfbc92c",
              "parentUUID": "2013a38b-dabc-45b0-a29d-5b12965d986b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Tom Cruise page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Tom Cruise page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 13422,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "1558edf8-0bf7-49b9-98f7-af96cae284d9",
              "parentUUID": "2013a38b-dabc-45b0-a29d-5b12965d986b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Nicolas Cage page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Nicolas Cage page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 11837,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n// Check if the correct actor page has been opened\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n// Check if the featured movies page has been opened\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "f75a18c7-9529-4506-8e1a-1a5823d0ce2f",
              "parentUUID": "2013a38b-dabc-45b0-a29d-5b12965d986b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd261cd5-2b32-45ea-8485-077ccca0ede5",
            "ae60a849-fa04-4653-a3b8-64e8cbe6bcd8",
            "3a1dd2c7-cf7a-4bc5-9fa7-eff8c8ed0762",
            "1b380dae-533f-49f4-9405-d036b5c8c26d",
            "303b757e-079b-4bc6-a416-daacc9b40f99",
            "3e20f391-abbe-4893-8ac6-e76a2cfbc92c",
            "1558edf8-0bf7-49b9-98f7-af96cae284d9",
            "f75a18c7-9529-4506-8e1a-1a5823d0ce2f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 100245,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b9c8e5ad-2f6f-4c42-af4e-07ce51ee5965",
      "title": "",
      "fullFile": "cypress/e2e/top-box/top-box.cy.js",
      "file": "cypress/e2e/top-box/top-box.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9aa89150-b71f-4f3d-a3b5-88c071fdbea7",
          "title": "Visit the Top Box Page and try to rate movie",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should try open Black Panther: Wakanda Forever page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Black Panther: Wakanda Forever page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 9437,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "b5241534-2d84-4c59-a6f2-9f3d3f57b994",
              "parentUUID": "9aa89150-b71f-4f3d-a3b5-88c071fdbea7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Puss in Boots: The Last Wish page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Puss in Boots: The Last Wish page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 7227,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "207c4b1f-ae9f-4275-9ef3-ced843bcfe42",
              "parentUUID": "9aa89150-b71f-4f3d-a3b5-88c071fdbea7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open The Menu page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open The Menu page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 8628,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "4ce65cb3-0fc5-46e9-8322-5c651b7f1f7a",
              "parentUUID": "9aa89150-b71f-4f3d-a3b5-88c071fdbea7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Whitney Houston: I Wanna Dance with Somebody page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Whitney Houston: I Wanna Dance with Somebody page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 7404,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "097bfe97-2621-4a37-a534-b17edac1f975",
              "parentUUID": "9aa89150-b71f-4f3d-a3b5-88c071fdbea7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Avatar: The Way of Water page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Avatar: The Way of Water page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 8893,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "5bfc28f9-4e7e-441d-a76c-1a7daf173033",
              "parentUUID": "9aa89150-b71f-4f3d-a3b5-88c071fdbea7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Babylon page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Babylon page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 8701,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "1b27e0b5-299c-4825-99ce-c6a6aac415d8",
              "parentUUID": "9aa89150-b71f-4f3d-a3b5-88c071fdbea7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Violent Night page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Violent Night page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 7560,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "3ddc863c-1c74-4dd0-b251-84a3aa551169",
              "parentUUID": "9aa89150-b71f-4f3d-a3b5-88c071fdbea7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open The Whale page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open The Whale page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 8010,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n//Check the number of top-box movies\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  //Verify that create new account page was suggested\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "75c06b74-a185-40fb-9efd-681692f4c624",
              "parentUUID": "9aa89150-b71f-4f3d-a3b5-88c071fdbea7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5241534-2d84-4c59-a6f2-9f3d3f57b994",
            "207c4b1f-ae9f-4275-9ef3-ced843bcfe42",
            "4ce65cb3-0fc5-46e9-8322-5c651b7f1f7a",
            "097bfe97-2621-4a37-a534-b17edac1f975",
            "5bfc28f9-4e7e-441d-a76c-1a7daf173033",
            "1b27e0b5-299c-4825-99ce-c6a6aac415d8",
            "3ddc863c-1c74-4dd0-b251-84a3aa551169",
            "75c06b74-a185-40fb-9efd-681692f4c624"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 65860,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7abf711f-65c8-45a6-9a20-f8547b8a81fd",
      "title": "",
      "fullFile": "cypress/e2e/tv-show/tv-show.cy.js",
      "file": "cypress/e2e/tv-show/tv-show.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "21f9139e-4424-4b78-b3e3-931f65cc122e",
          "title": "Visit a Top 250 TV shows section",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should allow open the Breaking Bad tv-show page and view photo of Danny Trejo",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Breaking Bad tv-show page and view photo of Danny Trejo",
              "timedOut": null,
              "duration": 16759,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "591c0f40-7491-425f-8b47-78734df7c6d8",
              "parentUUID": "21f9139e-4424-4b78-b3e3-931f65cc122e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Band of Brothers tv-show page and view photo of Ron Livingston",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Band of Brothers tv-show page and view photo of Ron Livingston",
              "timedOut": null,
              "duration": 16787,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "6795b18c-5cc6-4227-89ef-7abe036d3b3c",
              "parentUUID": "21f9139e-4424-4b78-b3e3-931f65cc122e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Chernobyl tv-show page and view photo of Hilton McRae",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Chernobyl tv-show page and view photo of Hilton McRae",
              "timedOut": null,
              "duration": 14191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "52389c7d-e982-435b-b6e4-03814a902872",
              "parentUUID": "21f9139e-4424-4b78-b3e3-931f65cc122e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Planet Earth II tv-show page and view photo of David Attenborough",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Planet Earth II tv-show page and view photo of David Attenborough",
              "timedOut": null,
              "duration": 13044,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "d3755594-44de-4d7e-b9b7-8a0e8e882c3e",
              "parentUUID": "21f9139e-4424-4b78-b3e3-931f65cc122e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Sherlock tv-show page and view photo of Amanda Abbington",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Sherlock tv-show page and view photo of Amanda Abbington",
              "timedOut": null,
              "duration": 17504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "62a2400e-e856-444b-ab24-525cab460456",
              "parentUUID": "21f9139e-4424-4b78-b3e3-931f65cc122e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the The Sopranos tv-show page and view photo of Vincent Pastore",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the The Sopranos tv-show page and view photo of Vincent Pastore",
              "timedOut": null,
              "duration": 18712,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "b777734c-2dad-43f8-bb3c-832fce9cb430",
              "parentUUID": "21f9139e-4424-4b78-b3e3-931f65cc122e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Cosmos tv-show page and view photo of Ann Druyan",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Cosmos tv-show page and view photo of Ann Druyan",
              "timedOut": null,
              "duration": 13625,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "d3427a9e-4c43-47c7-a498-aa14e730d71f",
              "parentUUID": "21f9139e-4424-4b78-b3e3-931f65cc122e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Game of Thrones tv-show page and view photo of Emilia Clarke",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Game of Thrones tv-show page and view photo of Emilia Clarke",
              "timedOut": null,
              "duration": 19554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n//Check the number of tv-shows\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n//Verify that the actor's photo was opened\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "6c53d379-9cb6-49a4-9edf-7735bb33d26f",
              "parentUUID": "21f9139e-4424-4b78-b3e3-931f65cc122e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "591c0f40-7491-425f-8b47-78734df7c6d8",
            "6795b18c-5cc6-4227-89ef-7abe036d3b3c",
            "52389c7d-e982-435b-b6e4-03814a902872",
            "d3755594-44de-4d7e-b9b7-8a0e8e882c3e",
            "62a2400e-e856-444b-ab24-525cab460456",
            "b777734c-2dad-43f8-bb3c-832fce9cb430",
            "d3427a9e-4c43-47c7-a498-aa14e730d71f",
            "6c53d379-9cb6-49a4-9edf-7735bb33d26f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 130176,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}