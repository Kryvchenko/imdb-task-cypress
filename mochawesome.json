{
  "stats": {
    "suites": 3,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-08T17:49:09.048Z",
    "end": "2023-01-08T17:53:55.371Z",
    "duration": 284368,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "66b1cc3d-5088-4a5c-b7a7-ae9f225e94d5",
      "title": "",
      "fullFile": "cypress/e2e/actor/actor.cy.js",
      "file": "cypress/e2e/actor/actor.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7232c892-4ee4-433d-913a-2bf2786d7a56",
          "title": "Visit actor`s page and sort his filmographie",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should allow to open actor Denzel Washington(I) page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Denzel Washington(I) page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 14655,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "5596a9f4-443a-4b86-920e-0d680fba1fa6",
              "parentUUID": "7232c892-4ee4-433d-913a-2bf2786d7a56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Bruce Willis(I) page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Bruce Willis(I) page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 11419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "a9a74dd0-4006-4553-a8e6-73b7d639752e",
              "parentUUID": "7232c892-4ee4-433d-913a-2bf2786d7a56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Antonio Banderas page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Antonio Banderas page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 11909,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "0ffa6944-7ecf-4d78-85b9-ffac02d8c2c1",
              "parentUUID": "7232c892-4ee4-433d-913a-2bf2786d7a56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Jason Statham page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Jason Statham page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 11141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "a5c679b1-6825-4093-bb1e-961a15eaa80e",
              "parentUUID": "7232c892-4ee4-433d-913a-2bf2786d7a56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Robert De Niro page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Robert De Niro page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 11100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "914f4c0e-b0c3-4959-bfb8-d2e701507fbc",
              "parentUUID": "7232c892-4ee4-433d-913a-2bf2786d7a56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Bo Derek page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Bo Derek page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 12219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "ffab630f-178d-41f3-9b21-6d4d97220089",
              "parentUUID": "7232c892-4ee4-433d-913a-2bf2786d7a56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Tom Cruise page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Tom Cruise page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 11075,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "d9523f57-a64b-4093-9d88-6aed3547a32d",
              "parentUUID": "7232c892-4ee4-433d-913a-2bf2786d7a56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow to open actor Nicolas Cage page and sort filmographie by rating including only featured movies",
              "fullTitle": "Visit actor`s page and sort his filmographie Should allow to open actor Nicolas Cage page and sort filmographie by rating including only featured movies",
              "timedOut": null,
              "duration": 10465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_Actor.default.setNameAndNavigateActorToPage(el.actorName);\n_Actor.default.actorHeader.then(header => {\n  expect(header.text()).to.eq(el.actorName);\n});\n_Actor.default.navigateToFilmographie();\n_Actor.default.selectFeaturedFilms();\n_Actor.default.getFisrtAttribute().then(alt => {\n  expect(alt).to.eq(el.firstFeaturedMovie);\n});",
              "err": {},
              "uuid": "7d474bf5-56bd-43ea-abb2-742e892c9f03",
              "parentUUID": "7232c892-4ee4-433d-913a-2bf2786d7a56",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5596a9f4-443a-4b86-920e-0d680fba1fa6",
            "a9a74dd0-4006-4553-a8e6-73b7d639752e",
            "0ffa6944-7ecf-4d78-85b9-ffac02d8c2c1",
            "a5c679b1-6825-4093-bb1e-961a15eaa80e",
            "914f4c0e-b0c3-4959-bfb8-d2e701507fbc",
            "ffab630f-178d-41f3-9b21-6d4d97220089",
            "d9523f57-a64b-4093-9d88-6aed3547a32d",
            "7d474bf5-56bd-43ea-abb2-742e892c9f03"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 93983,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7a3225f0-2bfb-4228-bdbd-278b71682a59",
      "title": "",
      "fullFile": "cypress/e2e/top-box/top-box.cy.js",
      "file": "cypress/e2e/top-box/top-box.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "26a44d5a-9807-47ee-8860-03adb84c5366",
          "title": "Visit the Top Box Page and try to rate movie",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should try open Black Panther: Wakanda Forever page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Black Panther: Wakanda Forever page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 9036,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "83030b20-ab90-427a-85f7-306b6b47e7ac",
              "parentUUID": "26a44d5a-9807-47ee-8860-03adb84c5366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Puss in Boots: The Last Wish page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Puss in Boots: The Last Wish page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 7602,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "2a62e942-e121-4b5e-bfad-0fe924ab6da1",
              "parentUUID": "26a44d5a-9807-47ee-8860-03adb84c5366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open The Menu page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open The Menu page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 8098,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "0e92981c-9fdb-43c9-871c-70393498817f",
              "parentUUID": "26a44d5a-9807-47ee-8860-03adb84c5366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Whitney Houston: I Wanna Dance with Somebody page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Whitney Houston: I Wanna Dance with Somebody page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 7150,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "bc42103a-fc41-42c8-b896-908b03a36cd4",
              "parentUUID": "26a44d5a-9807-47ee-8860-03adb84c5366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Avatar: The Way of Water page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Avatar: The Way of Water page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 7760,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "91dffca8-3051-4d53-846d-c09a352c8c4c",
              "parentUUID": "26a44d5a-9807-47ee-8860-03adb84c5366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Babylon page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Babylon page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 7975,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "304dde87-dfac-464a-be0c-1e4c9d26e15c",
              "parentUUID": "26a44d5a-9807-47ee-8860-03adb84c5366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open Violent Night page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open Violent Night page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 8023,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "b7c884c3-8be2-49ba-bdf1-eeca0f66a47c",
              "parentUUID": "26a44d5a-9807-47ee-8860-03adb84c5366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should try open The Whale page from the top box list and rate it without registration",
              "fullTitle": "Visit the Top Box Page and try to rate movie Should try open The Whale page from the top box list and rate it without registration",
              "timedOut": null,
              "duration": 7705,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TopBox.default.clickOnMenuAndChooseMenuOption(_constans.default.topBoxBtnText);\n_TopBox.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.moviesQuantity);\n  _TopBox.default.selectItemFromList(el.topBoxMovie);\n  _TopBox.default.rateItemFromTheList();\n  _TopBox.default.createNewAccBtn.contains(_constans.default.createNewAccBtnText).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "a5f2c72d-fd15-441b-84e5-3273cef2cbd2",
              "parentUUID": "26a44d5a-9807-47ee-8860-03adb84c5366",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83030b20-ab90-427a-85f7-306b6b47e7ac",
            "2a62e942-e121-4b5e-bfad-0fe924ab6da1",
            "0e92981c-9fdb-43c9-871c-70393498817f",
            "bc42103a-fc41-42c8-b896-908b03a36cd4",
            "91dffca8-3051-4d53-846d-c09a352c8c4c",
            "304dde87-dfac-464a-be0c-1e4c9d26e15c",
            "b7c884c3-8be2-49ba-bdf1-eeca0f66a47c",
            "a5f2c72d-fd15-441b-84e5-3273cef2cbd2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 63349,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d4e7fc76-580a-48ab-b945-be17944c2be5",
      "title": "",
      "fullFile": "cypress/e2e/tv-show/tv-show.cy.js",
      "file": "cypress/e2e/tv-show/tv-show.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1a261291-cb0e-4e85-b16d-bbc190b3f2a3",
          "title": "Visit a Top 250 TV shows section",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should allow open the Breaking Bad tv-show page and view photo of Danny Trejo",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Breaking Bad tv-show page and view photo of Danny Trejo",
              "timedOut": null,
              "duration": 16372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "50755f22-22ed-48b4-845c-fa42262b2d6a",
              "parentUUID": "1a261291-cb0e-4e85-b16d-bbc190b3f2a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Band of Brothers tv-show page and view photo of Ron Livingston",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Band of Brothers tv-show page and view photo of Ron Livingston",
              "timedOut": null,
              "duration": 15414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "2b333c3a-7606-46f6-bde7-e40cec2957bb",
              "parentUUID": "1a261291-cb0e-4e85-b16d-bbc190b3f2a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Chernobyl tv-show page and view photo of Hilton McRae",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Chernobyl tv-show page and view photo of Hilton McRae",
              "timedOut": null,
              "duration": 14251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "9440923c-eb49-48b1-a230-495dd5d38f01",
              "parentUUID": "1a261291-cb0e-4e85-b16d-bbc190b3f2a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Planet Earth II tv-show page and view photo of David Attenborough",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Planet Earth II tv-show page and view photo of David Attenborough",
              "timedOut": null,
              "duration": 12262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "ef51b4fe-2ded-40e8-a13f-880528cbc081",
              "parentUUID": "1a261291-cb0e-4e85-b16d-bbc190b3f2a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Sherlock tv-show page and view photo of Amanda Abbington",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Sherlock tv-show page and view photo of Amanda Abbington",
              "timedOut": null,
              "duration": 14708,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "a2156c66-4e23-4b37-82d7-49314a621459",
              "parentUUID": "1a261291-cb0e-4e85-b16d-bbc190b3f2a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the The Sopranos tv-show page and view photo of Vincent Pastore",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the The Sopranos tv-show page and view photo of Vincent Pastore",
              "timedOut": null,
              "duration": 14659,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "b84fcbc6-6aca-44de-a3e8-c7a559477fd5",
              "parentUUID": "1a261291-cb0e-4e85-b16d-bbc190b3f2a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Cosmos tv-show page and view photo of Ann Druyan",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Cosmos tv-show page and view photo of Ann Druyan",
              "timedOut": null,
              "duration": 14050,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "1e03de22-6fe4-49ce-b282-f9b9df2fd26c",
              "parentUUID": "1a261291-cb0e-4e85-b16d-bbc190b3f2a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow open the Game of Thrones tv-show page and view photo of Emilia Clarke",
              "fullTitle": "Visit a Top 250 TV shows section Should allow open the Game of Thrones tv-show page and view photo of Emilia Clarke",
              "timedOut": null,
              "duration": 25320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_TVShow.default.clickOnMenuAndChooseMenuOption(_constans.default.tvShowBtnText);\n_TVShow.default.checkQuantityOfItemsInTheList.then(res => {\n  expect(res.length).to.eq(_constans.default.tvShowsQuantity);\n});\n_TVShow.default.selectItemFromList(el.top250TVShows);\n_TVShow.default.filterPhotoByActor(el.top250TVShowsActor);\n_TVShow.default.pickUpTheSecondPhoto();\n_TVShow.default.checkPhotoNameTag(el.top250TVShowsActor).should(\"have.text\", el.top250TVShowsActor);",
              "err": {},
              "uuid": "a60a0837-80bf-4868-849d-5a30faefc4b1",
              "parentUUID": "1a261291-cb0e-4e85-b16d-bbc190b3f2a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50755f22-22ed-48b4-845c-fa42262b2d6a",
            "2b333c3a-7606-46f6-bde7-e40cec2957bb",
            "9440923c-eb49-48b1-a230-495dd5d38f01",
            "ef51b4fe-2ded-40e8-a13f-880528cbc081",
            "a2156c66-4e23-4b37-82d7-49314a621459",
            "b84fcbc6-6aca-44de-a3e8-c7a559477fd5",
            "1e03de22-6fe4-49ce-b282-f9b9df2fd26c",
            "a60a0837-80bf-4868-849d-5a30faefc4b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 127036,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}